{"version":3,"sources":["styles/images/card-photos sync /^/.//.*/.png$","styles/images/gutter-branch.png","styles/images/card-photos/Ali Shan.png","styles/images/card-photos/Autumn Mist Green.png","styles/images/card-photos/Black Dragon Pearls.png","styles/images/card-photos/Blood Orange.png","styles/images/card-photos/Bonfire.png","styles/images/card-photos/Ceylon Sonata.png","styles/images/card-photos/Chamomile.png","styles/images/card-photos/Dancong Aria.png","styles/images/card-photos/Earl Grey Bravo.png","styles/images/card-photos/Genmai Cha.png","styles/images/card-photos/Guacho Mate Chai.png","styles/images/card-photos/Gyokuro.png","styles/images/card-photos/Honeybush Pumpkin Chai.png","styles/images/card-photos/Irish Breakfast.png","styles/images/card-photos/Jade Oolong.png","styles/images/card-photos/Jasmine Phoenix Pearls.png","styles/images/card-photos/Mambo.png","styles/images/card-photos/Maple Creme Oolong.png","styles/images/card-photos/Masala Chai.png","styles/images/card-photos/Peppermint.png","styles/images/card-photos/Sencha Overture.png","styles/images/card-photos/Silver Needle.png","styles/images/card-photos/Snowbud.png","styles/images/card-photos/Spiced Apple Chai.png","styles/images/card-photos/Thai Chai.png","styles/images/card-photos/Ti Kuan Yin.png","styles/images/card-photos/Turmeric Bliss.png","styles/images/card-photos/White Darjeeling.png","styles/images/card-photos/White Strawberry.png","styles/images/card-photos/White Tropics.png","Controls.js","styles/images/cup.svg","styles/images/selectMood.svg","Splash.js","TeaCard.js","TeaList.js","styles/images/title.svg","App.js","serviceWorker.js","index.js"],"names":["map","./Ali Shan.png","./Autumn Mist Green.png","./Black Dragon Pearls.png","./Blood Orange.png","./Bonfire.png","./Ceylon Sonata.png","./Chamomile.png","./Dancong Aria.png","./Earl Grey Bravo.png","./Genmai Cha.png","./Guacho Mate Chai.png","./Gyokuro.png","./Honeybush Pumpkin Chai.png","./Irish Breakfast.png","./Jade Oolong.png","./Jasmine Phoenix Pearls.png","./Mambo.png","./Maple Creme Oolong.png","./Masala Chai.png","./Peppermint.png","./Sencha Overture.png","./Silver Needle.png","./Snowbud.png","./Spiced Apple Chai.png","./Thai Chai.png","./Ti Kuan Yin.png","./Turmeric Bliss.png","./White Darjeeling.png","./White Strawberry.png","./White Tropics.png","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","Controls","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","changeUserSelectedMood","event","setState","selectedMood","target","value","buttonText","updateUserSelectedMood","props","getMoodFromDescriptor","state","findCaffeineLevel","newlevel","updateCaffeineFilter","_this2","buttons","level","index","react_default","a","createElement","key","className","onClick","charAt","toUpperCase","slice","onChange","moods","reduce","allDescriptors","mood","concat","descriptors","toggleSplash","Component","_extends","assign","i","arguments","length","source","prototype","hasOwnProperty","apply","_ref","cup_SvgComponent","width","height","viewBox","style","fill","strokeWidth","strokeLinecap","strokeLinejoin","strokeOpacity","d","selectMood_extends","selectMood_ref","selectMood_SvgComponent","version","Splash","setUserSelectedMood","returnTeaListResults","TeaCard","toggleExpandFunction","toggleExpand","filteredTeaList","tea","src","require","alt","category","caffeine","tastes","taste","href","link","rel","TeaList","userSelectedMood","userSelectedTea","TeaCard_TeaCard","title_extends","title_ref","title_SvgComponent","transform","App","descriptor","moodId","caffeineLevel","matchingMood","moodData","filter","includes","renderSplashPage","teaData","fetch","then","response","json","data","catch","error","console","log","_this3","userSelectedTeas","filterTeasByCaffeine","_this4","Splash_Splash","Controls_Controls","teas","getTeasFromMood","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.df2c3cc7.chunk.js","sourcesContent":["var map = {\n\t\"./Ali Shan.png\": 21,\n\t\"./Autumn Mist Green.png\": 22,\n\t\"./Black Dragon Pearls.png\": 23,\n\t\"./Blood Orange.png\": 24,\n\t\"./Bonfire.png\": 25,\n\t\"./Ceylon Sonata.png\": 26,\n\t\"./Chamomile.png\": 27,\n\t\"./Dancong Aria.png\": 28,\n\t\"./Earl Grey Bravo.png\": 29,\n\t\"./Genmai Cha.png\": 30,\n\t\"./Guacho Mate Chai.png\": 31,\n\t\"./Gyokuro.png\": 32,\n\t\"./Honeybush Pumpkin Chai.png\": 33,\n\t\"./Irish Breakfast.png\": 34,\n\t\"./Jade Oolong.png\": 35,\n\t\"./Jasmine Phoenix Pearls.png\": 36,\n\t\"./Mambo.png\": 37,\n\t\"./Maple Creme Oolong.png\": 38,\n\t\"./Masala Chai.png\": 39,\n\t\"./Peppermint.png\": 40,\n\t\"./Sencha Overture.png\": 41,\n\t\"./Silver Needle.png\": 42,\n\t\"./Snowbud.png\": 43,\n\t\"./Spiced Apple Chai.png\": 44,\n\t\"./Thai Chai.png\": 45,\n\t\"./Ti Kuan Yin.png\": 46,\n\t\"./Turmeric Bliss.png\": 47,\n\t\"./White Darjeeling.png\": 48,\n\t\"./White Strawberry.png\": 49,\n\t\"./White Tropics.png\": 50\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8;","module.exports = __webpack_public_path__ + \"static/media/gutter-branch.ac14b839.png\";","module.exports = __webpack_public_path__ + \"static/media/Ali Shan.a91c9964.png\";","module.exports = __webpack_public_path__ + \"static/media/Autumn Mist Green.a291999d.png\";","module.exports = __webpack_public_path__ + \"static/media/Black Dragon Pearls.aca61441.png\";","module.exports = __webpack_public_path__ + \"static/media/Blood Orange.bf7005d9.png\";","module.exports = __webpack_public_path__ + \"static/media/Bonfire.21a80afc.png\";","module.exports = __webpack_public_path__ + \"static/media/Ceylon Sonata.e35b9ba4.png\";","module.exports = __webpack_public_path__ + \"static/media/Chamomile.e0b8cdde.png\";","module.exports = __webpack_public_path__ + \"static/media/Dancong Aria.39a2e9fc.png\";","module.exports = __webpack_public_path__ + \"static/media/Earl Grey Bravo.be7627b0.png\";","module.exports = __webpack_public_path__ + \"static/media/Genmai Cha.944fd80f.png\";","module.exports = __webpack_public_path__ + \"static/media/Guacho Mate Chai.b6682e6a.png\";","module.exports = __webpack_public_path__ + \"static/media/Gyokuro.c77927dd.png\";","module.exports = __webpack_public_path__ + \"static/media/Honeybush Pumpkin Chai.af4960e2.png\";","module.exports = __webpack_public_path__ + \"static/media/Irish Breakfast.d3a55a7c.png\";","module.exports = __webpack_public_path__ + \"static/media/Jade Oolong.bb66e62b.png\";","module.exports = __webpack_public_path__ + \"static/media/Jasmine Phoenix Pearls.b2ec714e.png\";","module.exports = __webpack_public_path__ + \"static/media/Mambo.5862b8ce.png\";","module.exports = __webpack_public_path__ + \"static/media/Maple Creme Oolong.64e972dc.png\";","module.exports = __webpack_public_path__ + \"static/media/Masala Chai.77a24be9.png\";","module.exports = __webpack_public_path__ + \"static/media/Peppermint.3ae7d3da.png\";","module.exports = __webpack_public_path__ + \"static/media/Sencha Overture.c30b47f3.png\";","module.exports = __webpack_public_path__ + \"static/media/Silver Needle.22c932ee.png\";","module.exports = __webpack_public_path__ + \"static/media/Snowbud.3f57a2b5.png\";","module.exports = __webpack_public_path__ + \"static/media/Spiced Apple Chai.3baab3b2.png\";","module.exports = __webpack_public_path__ + \"static/media/Thai Chai.5687c5f0.png\";","module.exports = __webpack_public_path__ + \"static/media/Ti Kuan Yin.ec53236c.png\";","module.exports = __webpack_public_path__ + \"static/media/Turmeric Bliss.f8c5af87.png\";","module.exports = __webpack_public_path__ + \"static/media/White Darjeeling.a4aa04c3.png\";","module.exports = __webpack_public_path__ + \"static/media/White Strawberry.55eb6d54.png\";","module.exports = __webpack_public_path__ + \"static/media/White Tropics.66466de9.png\";","import React, { Component } from 'react';\nimport './styles/Main.scss';\n\nexport default class Controls extends Component {\n  constructor() {\n    super();\n    this.state = {\n      selectedMood: '',\n      buttonText: 'Show All'\n    };\n  }\n\n  changeUserSelectedMood = (event) => {\n    this.setState({\n      selectedMood: event.target.value,\n      buttonText: 'Brew Tea'\n    });\n  }\n\n  updateUserSelectedMood = () => {\n    this.props.getMoodFromDescriptor(this.state.selectedMood);\n  }\n\n  findCaffeineLevel = (newlevel) => {\n    this.props.updateCaffeineFilter(newlevel);\n  }\n\n  render() {\n    let levels = ['none', 'low', 'moderate', 'high'];\n    let buttons = levels.map((level, index) => {\n      return <button key={index} className=\"caffeine-buttons\" onClick={() => this.findCaffeineLevel(level)}>{level.charAt(0).toUpperCase() + level.slice(1)}</button>;\n    }); \n\n    return (\n      <div className=\"controls-container\">\n        <h2 className=\"controls-heading\">Adjust your tea!</h2>\n        <span className=\"controls-subheadings\">\n          <h3 className=\"caffeine-subheading subheading\">Caffeine Level:</h3>\n          <h3 className=\"mood-subheading subheading\">I'm feeling...</h3>        \n        </span>\n        <div className=\"controls-top\">\n          <div className=\"left-nested-options\">\n            {buttons}\n          </div>\n          <div className=\"right-nested-options\">          \n            <select className=\"user-reselected-mood\" onChange={this.changeUserSelectedMood}>\n              <option value=\"\">Select another mood</option>\n              {\n                this.props.moods.reduce((allDescriptors, mood) => {\n                  return allDescriptors.concat(mood.descriptors);\n                }, []).map((mood, index) => {\n                  return <option key={index} value={mood}>{mood}</option>;\n                })\n              }\n            </select>\n          </div>\n        </div>\n        <span className=\"divider\"></span>\n        <div className=\"controls-bottom\">\n          <h3 className=\"submit-subheading subheading\">Show me!</h3>        \n          <button className=\"rebrew-tea\" onClick={this.updateUserSelectedMood}>{this.state.buttonText}</button>\n          <h3 className=\"reset-subheading subheading\">Start over:</h3>        \n          <button className=\"reset-button\" onClick={this.props.toggleSplash}>Reset</button>\n        </div>\n      </div>\n    );\n  }\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"defs\", {\n  id: \"defs1065\"\n});\n\nvar SvgComponent = function SvgComponent(props) {\n  return React.createElement(\"svg\", _extends({\n    id: \"svg1061\",\n    width: 500,\n    height: 200,\n    viewBox: \"150 200 437.5 250\"\n  }, props), _ref, React.createElement(\"path\", {\n    style: {\n      \"fill\": \"none\",\n      \"strokeWidth\": \"1.92072332px\",\n      \"strokeLinecap\": \"butt\",\n      \"strokeLinejoin\": \"miter\",\n      \"strokeOpacity\": 1\n    },\n    d: \"m 441.05188,310.50781 c -26.5099,12.7467 -47.2383,30.52777 -47.20057,54.21088 0.0738,46.28046 68.60256,72.02804 132.13051,72.35431 63.52795,0.32624 128.92918,-24.92095 129.1866,-70.25111 0.043,-7.57542 -2.12577,-14.81819 -5.97913,-21.59767 m -10.14212,-13.25979 c -8.29107,-8.52224 -13.14529,-14.38127 -25.18004,-20.37221\",\n    id: \"path5320\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"none\",\n      \"strokeWidth\": \"2.02493358px\",\n      \"strokeLinecap\": \"butt\",\n      \"strokeLinejoin\": \"miter\",\n      \"strokeOpacity\": 1\n    },\n    d: \"m 466.37333,362.56532 c -6.59632,2.44195 -10.28415,8.5266 -9.3691,15.58099 10.09987,43.78192 126.7975,42.83713 132.15175,1.09607 0.41069,-6.36283 -2.34747,-13.4346 -7.40296,-16.68519\",\n    id: \"path5332\"\n  }), React.createElement(\"path\", {\n    id: \"path5318\",\n    style: {\n      \"fill\": \"none\",\n      \"strokeWidth\": \"1.92072332px\",\n      \"strokeLinecap\": \"butt\",\n      \"strokeLinejoin\": \"miter\",\n      \"strokeOpacity\": 1\n    },\n    d: \"m 487.61045,384.17148 c -12.87246,23.29828 87.57887,24.39202 73.33514,1.05286 M 492.14001,228.13947 c -18.12634,3.31956 -54.36046,12.85692 -56.51681,46.14309 -2.17166,33.52252 31.98607,97.9587 51.98725,109.88892 26.07881,14.71208 54.2443,12.80828 73.33514,1.05286 26.38334,-20.33307 55.3586,-76.3524 52.912,-108.8376 -0.0375,-32.81385 -32.53022,-43.05618 -55.09529,-47.87424 -22.56505,-4.81806 -48.49598,-3.69258 -66.62229,-0.37303 z m 114.29114,39.83452 c 1.06244,33.8318 -52.15154,39.99793 -81.69074,40.48266 -29.53921,0.48471 -81.48461,-4.63431 -81.69078,-37.32837 4.8995,-28.48771 53.36662,-37.16724 82.62193,-36.80534 29.25532,0.36191 74.82196,7.76851 80.75959,33.65105 z\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"none\",\n      \"strokeWidth\": \"1.92072332px\",\n      \"strokeLinecap\": \"butt\",\n      \"strokeLinejoin\": \"miter\",\n      \"strokeOpacity\": 1\n    },\n    d: \"m 480.18343,315.29384 c -0.45712,7.36314 -1.93475,14.43726 2.32076,23.13503\",\n    id: \"path5326\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"none\",\n      \"strokeWidth\": \"1.92072332px\",\n      \"strokeLinecap\": \"butt\",\n      \"strokeLinejoin\": \"miter\",\n      \"strokeOpacity\": 1\n    },\n    d: \"m 591.11556,311.08745 c 0.10163,8.76326 -4.19847,17.52655 -6.49812,26.28981\",\n    id: \"path5328\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"none\",\n      \"strokeWidth\": \"1.92072332px\",\n      \"strokeLinecap\": \"butt\",\n      \"strokeLinejoin\": \"miter\",\n      \"strokeOpacity\": 1\n    },\n    d: \"m 598.07782,307.40687 c 0.57078,10.86646 -4.07612,24.36191 -8.81887,34.70257\",\n    id: \"path5330\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"none\",\n      \"strokeWidth\": \"1.53761029px\",\n      \"strokeLinecap\": \"butt\",\n      \"strokeLinejoin\": \"miter\",\n      \"strokeOpacity\": 1\n    },\n    d: \"m 442.38148,272.2784 c 59.48221,-13.99352 103.79974,-14.06361 164.3972,-1.00931\",\n    id: \"path5335\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"none\",\n      \"strokeWidth\": \"1.92072332px\",\n      \"strokeLinecap\": \"butt\",\n      \"strokeLinejoin\": \"miter\",\n      \"strokeOpacity\": 1\n    },\n    d: \"m 440.26644,340.53204 c -6.37067,1.64187 -9.23495,6.26279 -10.67548,12.09333\",\n    id: \"path5337\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"none\",\n      \"strokeWidth\": \"1.92072332px\",\n      \"strokeLinecap\": \"butt\",\n      \"strokeLinejoin\": \"miter\",\n      \"strokeOpacity\": 1\n    },\n    d: \"m 445.83624,343.16103 c -6.33626,3.11702 -10.67831,7.92836 -12.06793,15.2481\",\n    id: \"path5339\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"none\",\n      \"strokeWidth\": \"1.92072332px\",\n      \"strokeLinecap\": \"butt\",\n      \"strokeLinejoin\": \"miter\",\n      \"strokeOpacity\": 1\n    },\n    d: \"m 495.03627,412.04038 c -4.65548,3.38319 -6.45772,7.84378 -7.42641,12.61912\",\n    id: \"path5341\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"none\",\n      \"strokeWidth\": \"1.92072332px\",\n      \"strokeLinecap\": \"butt\",\n      \"strokeLinejoin\": \"miter\",\n      \"strokeOpacity\": 1\n    },\n    d: \"m 521.49288,415.72095 -0.46414,6.83535\",\n    id: \"path5343\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"none\",\n      \"strokeWidth\": \"1.92072332px\",\n      \"strokeLinecap\": \"butt\",\n      \"strokeLinejoin\": \"miter\",\n      \"strokeOpacity\": 1\n    },\n    d: \"m 528.91931,413.61775 c 1.29258,5.96283 0.70219,11.9136 -0.46415,17.8771\",\n    id: \"path5345\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"none\",\n      \"strokeWidth\": \"1.92072332px\",\n      \"strokeLinecap\": \"butt\",\n      \"strokeLinejoin\": \"miter\",\n      \"strokeOpacity\": 1\n    },\n    d: \"m 553.51931,416.24674 c 1.12886,1.47356 2.38615,2.65608 2.32076,6.83535\",\n    id: \"path5347\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"none\",\n      \"strokeWidth\": \"1.92072332px\",\n      \"strokeLinecap\": \"butt\",\n      \"strokeLinejoin\": \"miter\",\n      \"strokeOpacity\": 1\n    },\n    d: \"m 567.908,318.44861 c 0.20185,6.41897 -0.6985,12.70373 -3.00048,17.72308\",\n    id: \"path5349\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"none\",\n      \"strokeWidth\": \"1.92072332px\",\n      \"strokeLinecap\": \"butt\",\n      \"strokeLinejoin\": \"miter\",\n      \"strokeOpacity\": 1\n    },\n    d: \"m 561.40988,320.55178 c 0.49955,3.78157 0.0107,8.02126 -1.14388,9.52814\",\n    id: \"path5351\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"none\",\n      \"strokeWidth\": \"1.92072332px\",\n      \"strokeLinecap\": \"butt\",\n      \"strokeLinejoin\": \"miter\",\n      \"strokeOpacity\": 1\n    },\n    d: \"m 582.57563,361.25708 c 0,0 14.57837,-5.56884 26.64184,-3.89953 12.06346,1.66933 30.58979,-4.18699 39.97182,-12.13333 9.38201,-7.94635 13.90869,-15.56668 13.40554,-26.24981 -5.0679,-28.49035 -26.96128,-32.25471 -49.20001,-28.91881\",\n    id: \"path5353\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"none\",\n      \"strokeWidth\": \"1.92072332px\",\n      \"strokeLinecap\": \"butt\",\n      \"strokeLinejoin\": \"miter\",\n      \"strokeOpacity\": 1\n    },\n    d: \"m 605.50424,320.02599 c 8.55709,-3.3088 7.79966,-16.38397 25.99247,-13.14491 16.52946,4.27839 17.58733,16.30993 7.55046,25.08335 -5.20804,3.20142 -40.19234,19.20947 -40.96935,3.83546\",\n    id: \"path5355\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"none\",\n      \"strokeWidth\": \"1.92072332px\",\n      \"strokeLinecap\": \"butt\",\n      \"strokeLinejoin\": \"miter\",\n      \"strokeOpacity\": 1\n    },\n    d: \"m 649.00707,303.52102 c 4.88139,6.06726 10.0645,12.01025 5.57949,21.93585\",\n    id: \"path5357\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"none\",\n      \"strokeWidth\": \"1.92072332px\",\n      \"strokeLinecap\": \"butt\",\n      \"strokeLinejoin\": \"miter\",\n      \"strokeOpacity\": 1\n    },\n    d: \"m 435.67421,273.40569 c 4.2327,57.27335 174.39329,50.71674 178.18338,2.98105\",\n    id: \"path5359\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"none\",\n      \"strokeWidth\": 1,\n      \"strokeLinecap\": \"butt\",\n      \"strokeLinejoin\": \"miter\",\n      \"strokeOpacity\": 1\n    },\n    d: \"m 465.58473,299.95973 c 0,0 -2.96098,-23.98549 -19.87144,-14.94985 -16.91046,9.03564 1.52462,76.46405 -9.22761,92.06232 -14.03288,23.52079 -25.11512,-0.56069 -37.82876,-1.45496 -27.43932,7.96311 -51.88359,35.64332 -80.02237,39.28371 -21.85756,2.25375 -66.45523,-39.63063 -66.45523,-39.63063\",\n    id: \"path5361\"\n  }), React.createElement(\"path\", {\n    className: \"button-svg\",\n    style: {\n      \"fill\": \"none\",\n      \"strokeWidth\": 1,\n      \"strokeLinecap\": \"butt\",\n      \"strokeLinejoin\": \"miter\",\n      \"strokeOpacity\": 1\n    },\n    d: \"m 260.2097,395.26693 0.3513,-37.09645 -6.51285,-7.51057 -84.87056,-4.62255 -9.22593,9.59833 -0.51781,41.3303 8.67187,7.98313 83.57325,-4.36013 z\",\n    id: \"path5365\"\n  }), React.createElement(\"path\", {\n    style: {\n      \"fill\": \"none\",\n      \"strokeWidth\": 1,\n      \"strokeLinecap\": \"butt\",\n      \"strokeLinejoin\": \"miter\",\n      \"strokeOpacity\": 1\n    },\n    d: \"m 454.67258,262.85845 c 3.61815,-8.08485 16.27219,-13.78714 26.91662,-14.54953\",\n    id: \"path5371\"\n  }));\n};\n\nexport default __webpack_public_path__ + \"static/media/cup.b44711de.svg\";\nexport { SvgComponent as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"defs\", {\n  id: \"defs70\"\n});\n\nvar SvgComponent = function SvgComponent(props) {\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 450 150\",\n    height: 150,\n    width: 450,\n    id: \"svg66\",\n    version: 1.1\n  }, props), _ref, React.createElement(\"path\", {\n    id: \"path3767\",\n    d: \"m 336.4237,55.412013 c -1.27232,-1.571858 -2.17446,-4.82059 -2.03208,-7.317817 0.15436,-2.707439 0.94691,-2.194094 1.82869,1.184467 1.51528,5.805809 2.48533,6.734747 3.9448,3.77761 0.68803,-1.394055 0.81654,-2.29994 0.81654,-5.756071 0,-4.814428 -0.6903,-7.982434 -2.49757,-11.462222 -2.7936,-5.378888 -3.71452,-9.65312 -3.29672,-15.300927 0.34427,-4.653872 1.85567,-7.615948 3.88602,-7.615948 1.1608,0 1.67629,0.387826 2.3619,1.776977 0.82759,1.676846 1.21671,4.96328 0.58766,4.96328 -0.15915,0 -0.77743,-1.213246 -1.37395,-2.696102 -1.2568,-3.124153 -1.91051,-3.347766 -2.98872,-1.022342 -0.622,1.341506 -0.78132,2.459054 -0.80258,5.62972 -0.0296,4.407666 0.44734,6.216269 3.50727,13.301271 2.12822,4.927692 2.64843,7.097728 2.66378,11.111758 0.0302,7.89048 -3.62538,13.107478 -6.60504,9.426346 z m 38.22887,0.268809 c -1.49787,-2.125747 -1.89508,-4.800341 -1.89854,-12.783565 -0.003,-6.65841 0.0854,-7.781308 0.84818,-10.784411 1.0085,-3.97073 1.99151,-5.206887 3.79419,-4.7713 1.36294,0.329329 2.17398,1.786938 2.17398,3.90708 0,1.819987 -0.73875,1.475706 -1.72625,-0.804486 -1.46268,-3.377401 -2.26562,-1.621099 -2.96174,6.478347 -0.21235,2.470679 -0.30835,6.229086 -0.21334,8.352013 0.18093,4.04299 1.30157,10.110226 1.86738,10.110226 0.18155,0 0.66663,-1.213247 1.07795,-2.696103 0.77552,-2.795796 1.50135,-3.450447 1.84045,-1.659961 0.25324,1.337101 -0.75646,3.617414 -2.11923,4.786103 -1.37005,1.174931 -1.77499,1.154715 -2.68303,-0.133943 z m 10.71185,0.310404 c -1.71189,-0.979254 -1.96551,-2.944173 -1.99222,-15.435066 -0.0224,-10.447809 -0.0626,-11.133221 -0.66532,-11.316174 -2.54513,-0.772614 -2.98673,-2.164341 -0.68676,-2.164341 h 1.45176 l 0.21155,-3.12719 c 0.11635,-1.719954 0.21384,-4.373931 0.21664,-5.897725 0.003,-1.523794 0.14627,-3.222966 0.31881,-3.775939 0.64849,-2.078286 1.16119,0.581943 1.33535,6.928611 l 0.17038,6.209256 1.08115,0.211212 c 1.42874,0.279114 1.39503,1.473852 -0.0416,1.473852 -0.99133,0 -1.14706,0.246519 -1.33064,2.106331 -0.34621,3.507402 -0.23308,16.640944 0.17137,19.895453 0.41112,3.308065 1.02723,4.260392 1.97799,3.057346 0.42508,-0.537875 0.67127,-0.552091 0.82513,-0.04765 0.49717,1.629897 -1.41613,2.812986 -3.04361,1.88202 z m -37.72954,-0.753924 c -1.26786,-1.332804 -2.00044,-5.117076 -2.22199,-11.478187 -0.15474,-4.442631 -0.0696,-6.451304 0.39316,-9.274124 0.81228,-4.95507 1.82979,-6.73532 3.84961,-6.73532 2.45486,0 3.3018,2.421551 3.3018,9.44046 0,5.034763 -0.0452,5.10486 -3.40978,5.285442 l -1.9128,0.102664 0.007,3.201622 c 0.008,3.599671 1.05171,8.930841 1.74808,8.930841 0.2515,0 0.80885,-0.758279 1.23856,-1.685064 0.85114,-1.835681 1.66331,-2.21581 1.66331,-0.778492 0,2.704282 -3.06018,4.669048 -4.65726,2.990158 z m 3.39923,-15.018155 c 0.26671,-0.752327 0.0361,-4.941558 -0.45116,-8.197212 -0.40756,-2.722908 -1.26985,-3.44563 -1.98275,-1.661822 -0.56032,1.402051 -1.45569,9.133734 -1.16724,10.079392 0.23646,0.775199 3.315,0.586819 3.60115,-0.220358 z m 6.15042,15.014831 c -0.83952,-1.245179 -1.21841,-7.509934 -1.22643,-20.277925 -0.006,-10.15538 0.43756,-19.742083 0.96678,-20.877499 0.13526,-0.290189 0.51118,-0.321373 0.83539,-0.0693 0.5479,0.425995 0.57325,1.413886 0.35957,14.008131 -0.15135,8.919906 -0.10008,15.616267 0.15003,19.597463 0.20897,3.326207 0.43186,6.152855 0.49532,6.28144 0.0635,0.128585 0.42255,-0.154884 0.79798,-0.629929 0.82785,-1.047528 1.32212,-0.271988 0.83372,1.308163 -0.4433,1.43421 -2.41686,1.839357 -3.21236,0.659456 z m 7.71594,0.109399 c -1.47122,-1.152169 -2.29102,-6.151158 -2.29397,-13.98824 -0.002,-5.659841 0.90171,-10.86136 2.18286,-12.562212 0.80836,-1.073169 3.34958,-1.407713 4.00627,-0.527413 1.2709,1.70366 2.06407,11.896558 1.0444,13.421486 -0.22871,0.342031 -1.38886,0.709042 -2.57813,0.815579 -1.18926,0.106536 -2.26116,0.394627 -2.382,0.640201 -0.32901,0.668632 0.25972,7.0958 0.86846,9.480925 0.64507,2.527515 1.15012,2.62068 2.17887,0.401933 0.85113,-1.835681 1.6633,-2.21581 1.6633,-0.778492 0,2.623793 -2.87216,4.519902 -4.69006,3.096233 z m 3.27292,-19.064273 c -0.12537,-3.573606 -0.32598,-4.941528 -0.88961,-6.066232 l -0.72773,-1.452162 -0.62363,1.537612 c -0.64734,1.596084 -1.50235,8.385139 -1.23428,9.800596 0.0924,0.487625 0.84453,0.805699 1.89513,0.801393 l 1.74199,-0.0071 z m 28.6296,16.241012 c -0.16245,-5.717143 0.28036,-37.783327 0.5451,-39.473391 0.41995,-2.68094 0.98426,-1.230245 2.06965,5.320595 2.71298,16.374101 4.78157,27.926152 5.0308,28.094478 0.15057,0.101693 0.81599,-3.687794 1.47871,-8.421083 3.28979,-23.496437 3.82509,-26.402758 4.66845,-25.346674 0.70882,0.887619 0.86384,4.611238 0.92465,22.210807 0.0357,10.337147 0.0471,19.195048 0.0253,19.684225 -0.0233,0.521518 -0.34931,0.800319 -0.7882,0.674025 -0.95697,-0.275378 -1.14449,-3.027062 -1.20526,-17.686189 -0.0245,-5.901801 -0.10997,-10.863215 -0.19,-11.025366 -0.08,-0.16215 -0.3875,1.481824 -0.68328,3.653277 -0.2958,2.171453 -1.13999,8.042802 -1.87601,13.047443 -0.73601,5.004641 -1.41384,9.647392 -1.50629,10.317224 -0.41702,3.021487 -1.21764,0.381274 -2.92418,-9.643199 -0.9782,-5.746069 -2.03779,-11.963956 -2.35465,-13.817527 -0.92204,-5.393867 -1.15299,-5.104689 -1.15299,1.443688 0,3.351956 -0.0981,10.237129 -0.2179,15.300383 -0.2135,9.01996 -0.23331,9.205919 -0.9806,9.205919 -0.68553,0 -0.77287,-0.357998 -0.86325,-3.538635 z m 20.43719,1.884917 c -1.37804,-2.349425 -1.88084,-5.675608 -1.83284,-12.124933 0.0534,-7.177948 0.58304,-10.713313 1.97622,-13.191775 1.32374,-2.354928 2.49273,-2.557549 4.0015,-0.693579 1.36791,1.689956 2.09663,6.408501 2.09663,13.575921 0,8.538849 -1.22161,12.720453 -4.01825,13.754614 -0.98453,0.364064 -1.36939,0.13552 -2.22326,-1.320248 z m 2.98256,-1.547904 c 1.31981,-3.092252 1.6834,-12.334938 0.76596,-19.471609 -0.68527,-5.330687 -1.3811,-6.103954 -2.57561,-2.862247 -1.5488,4.203171 -1.38569,16.585887 0.28975,21.996843 0.56519,1.825292 0.85707,1.890011 1.5199,0.337013 z m 8.19176,1.907204 c -1.50528,-2.399082 -2.05111,-6.495372 -1.87034,-14.03628 0.17917,-7.473913 0.7147,-10.280786 2.35944,-12.36639 1.29203,-1.638366 2.97612,-1.325082 4.07001,0.75713 1.73002,3.293049 2.25816,16.053642 0.88445,21.369388 -1.2794,4.95077 -3.78521,6.919195 -5.44356,4.276152 z m 2.99787,-1.608811 c 0.53656,-1.309951 1.38511,-8.444337 1.37509,-11.561429 -0.0134,-4.179397 -1.12242,-11.879595 -1.82577,-12.677124 -1.95875,-2.221009 -3.25397,10.865138 -1.95714,19.773669 0.76038,5.223386 1.52009,6.632149 2.40782,4.464884 z m 7.13052,1.878676 c -1.08546,-1.540462 -1.56197,-5.408972 -1.57579,-12.792974 -0.0182,-9.720726 0.96603,-13.004602 4.43308,-14.791064 l 1.54221,-0.79465 0.19076,-4.676619 c 0.28757,-7.050321 0.72027,-8.944032 1.56911,-6.867202 0.26642,0.651851 0.64409,35.393291 0.43436,39.956825 -0.0539,1.173186 -5.76382,1.14347 -6.59373,-0.03432 z m 4.06318,-1.663356 c 0.53909,-1.206945 0.58125,-2.377023 0.42503,-11.795272 -0.17745,-10.697955 -0.4021,-12.477848 -1.57486,-12.477848 -2.06617,0 -3.33843,10.811781 -2.28483,19.416781 0.73098,5.970118 2.08321,7.882067 3.43466,4.856339 z\",\n    style: {\n      \"strokeWidth\": 1\n    }\n  }), React.createElement(\"path\", {\n    id: \"path4576\",\n    d: \"m 315.37414,93.64626 c 0,0 70.50387,11.91236 83.23809,-1.55102 12.73422,-13.463377 7.2381,-27.918367 7.2381,-27.918367\",\n    style: {\n      \"fill\": \"none\",\n      \"strokeWidth\": 1,\n      \"strokeLinecap\": \"round\",\n      \"strokeLinejoin\": \"miter\",\n      \"strokeOpacity\": 1\n    }\n  }));\n};\n\nexport default __webpack_public_path__ + \"static/media/selectMood.c281876b.svg\";\nexport { SvgComponent as ReactComponent };","import React, { Component } from 'react';\nimport './styles/Main.scss';\nimport { ReactComponent as Cup } from './styles/images/cup.svg';\nimport { ReactComponent as SelectMood } from './styles/images/selectMood.svg';\n\n\nexport default class Splash extends Component {\n  constructor() {\n    super();\n    this.state = {\n      selectedMood: '',\n      buttonText: 'Show All'\n    };\n  }\n\nsetUserSelectedMood = (event) => {\n  this.setState({\n    selectedMood: event.target.value,\n    buttonText: 'Brew Tea'\n  });\n}\n\nreturnTeaListResults = () => {\n  this.props.getMoodFromDescriptor(this.state.selectedMood);\n  this.props.toggleSplash();\n}\n\nrender() {\n  return (\n    <div className=\"splash-page-container\">\n      <div className=\"instructions-container\">\n        <h2 className=\"instructions-heading\">Instructions</h2>\n        <p className=\"instructions-body\"><span className=\"instruction-number\">1)</span> Tell us how you're feeling at this moment.</p>\n        <p className=\"instructions-body\"><span className=\"instruction-number\">2)</span> Click the \"Brew Tea\" button, and we will recommend teas accordingly.</p>\n        <p className=\"instructions-body\"><span className=\"instruction-number\">3)</span> Feel free to click a tea to show more information about it.</p>\n        <p className=\"instructions-body\"><span className=\"instruction-number\">4)</span> You can make adjustments or select a new mood at any time.</p>\n      </div>\n      <div className=\"select-mood-content\">\n        <SelectMood className=\"select-mood\"/>\n        <select className=\"user-selected-mood\" onChange={this.setUserSelectedMood}>\n          <option>Select your mood</option>\n          {\n            this.props.moods.reduce((allDescriptors, mood) => {\n              return allDescriptors.concat(mood.descriptors);\n            }, []).map((mood, index) => {\n              return <option key={index} value={mood}>{mood}</option>;\n            })\n          }\n          \n        </select>\n      </div>\n      <div className=\"cup-container\">\n        <Cup className=\"cup\"/>\n        <button className=\"splash-page-button\" onClick={this.returnTeaListResults}>\n          {this.state.buttonText}\n        </button>\n      </div>\n    </div>\n  );\n}\n}","import React, { Component } from 'react';\nimport './styles/Main.scss';\n\nexport default class TeaCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggleExpand: true\n    };\n  }\n\n  toggleExpandFunction = () => {\n    this.setState({\n      toggleExpand: !this.state.toggleExpand\n    });\n  }\n  \n  render(props) {\n    if (this.state.toggleExpand) {\n      return (\n        <li className=\"tea-card\" onClick={this.toggleExpandFunction}>\n          <h2 className=\"tea-name-unexpanded\">{this.props.filteredTeaList.tea}</h2>\n          <img className=\"tea-image-unexpanded\" src={require(`./styles/images/card-photos/${this.props.filteredTeaList.tea}.png`)} alt=\"\"/>\n        </li>\n      );\n} else {\n      return (\n        <li  className=\"full-tea-info\" onClick={this.toggleExpandFunction}>\n          <h1 className=\"tea-name-expanded\">❁ {this.props.filteredTeaList.tea} ❁</h1> \n          <div className=\"tea-info-container\">\n            <div className=\"category-container\">\n              <h3 className=\"info-subheading\">Category:</h3>\n              <h2 className=\"tea-category\">{this.props.filteredTeaList.category}</h2>\n            </div>\n            <div className=\"caffeine-container\">\n              <h3 className=\"info-subheading\">Caffeine Level:</h3>\n              <h3 className=\"tea-caffeine\">{this.props.filteredTeaList.caffeine}</h3>\n            </div>\n            <div className=\"tastes-container\">\n              <h3 className=\"info-subheading\">Tastes included:</h3>\n              {\n                this.props.filteredTeaList.tastes.map((taste, index) => {\n                  return (\n                    <p className=\"tea-tastes\" key={index} value={taste}>✿  {taste}</p>\n                  );\n                })\n              }\n            </div>\n            <div className=\"image-link-container\">\n              <img className=\"tea-image-expanded\" src={require(`./styles/images/card-photos/${this.props.filteredTeaList.tea}.png`)} alt=\"\"/>\n              <a className=\"buy-link\" href={this.props.filteredTeaList.link} target=\"_blank\" rel=\"noopener noreferrer\">Buy Now</a>\n            </div>\n          </div>\n        </li>\n      );\n    }\n  }\n}","import React from 'react';\nimport './styles/Main.scss';\nimport TeaCard from './TeaCard.js';\n\nexport default function TeaList(props) {\n  return (\n    <div className=\"tea-list\">\n      <div className=\"tealist-heading-container\">\n        <h1 className=\"tealist-heading\">Teas for when you're feeling <span className=\"selected-descriptor\">{props.userSelectedMood}</span> :</h1>\n      </div>\n      <ul>\n        {\n          props.userSelectedTea.map((tea, index) => {\n            return (\n              <TeaCard key={index} filteredTeaList={tea}/>                                                                                                                      \n            );\n          })\n        }\n      </ul>\n    </div>\n  );\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"defs\", {\n  id: \"defs2\"\n});\n\nvar SvgComponent = function SvgComponent(props) {\n  return React.createElement(\"svg\", _extends({\n    width: \"250px\",\n    height: \"100px\",\n    viewBox: \"0 0 297 210\",\n    version: 1.1,\n    id: \"svg8\"\n  }, props), _ref, React.createElement(\"g\", null, React.createElement(\"path\", {\n    style: {\n      \"strokeWidth\": 1,\n      \"transform\": \"translate(0px, -100px)\"\n    },\n    d: \"m 101.347,234.84456 c -0.14939,-0.27913 -0.47314,-1.20187 -0.71946,-2.05052 -0.39174,-1.34972 -0.47035,-3.74687 -0.62753,-19.13779 -0.109651,-10.73645 -0.298497,-18.47142 -0.484483,-19.84375 -0.389189,-2.87173 -1.047462,-7.16023 -1.360525,-8.86354 -0.133734,-0.7276 -0.369147,-2.27542 -0.523145,-3.43958 -0.356256,-2.6932 -0.411882,-2.83266 -1.089149,-2.73054 -1.941677,0.29278 -7.38364,14.11453 -8.835969,22.442 -0.241102,1.38244 -0.564378,2.81119 -0.718389,3.175 -0.181848,0.42956 -0.263266,3.81521 -0.232235,9.65729 0.03834,7.21773 0.130085,9.30961 0.464166,10.58333 0.297984,1.13609 0.375327,2.24352 0.272002,3.89456 -0.125928,2.01223 -0.23962,2.4275 -0.889685,3.24962 -0.677021,0.85621 -0.851956,0.93574 -1.90931,0.86795 -1.501902,-0.0963 -1.99925,-0.75682 -2.546461,-3.38192 -0.741246,-3.55596 -0.975995,-7.87303 -1.09343,-20.10833 -0.176586,-18.39809 0.469265,-33.79916 1.497991,-35.72135 0.694965,-1.29856 2.362954,-0.81318 3.636632,1.05824 0.570362,0.83804 0.595312,1.10591 0.595312,6.39182 0,5.40557 0.17639,6.47944 0.79642,4.84864 1.692026,-4.45037 6.387549,-10.63409 8.167534,-10.75615 2.077,-0.14242 3.149759,0.22139 5.138274,1.74259 1.96973,1.50684 2.81906,3.67045 3.35333,8.5423 0.17247,1.57274 0.47905,3.57391 0.68128,4.44703 0.43093,1.86051 0.60337,8.86715 0.70852,28.78827 l 0.0724,13.70702 -0.58827,0.44819 c -0.32354,0.2465 -0.71642,0.81873 -0.87306,1.27161 -0.45358,1.3114 -2.35862,1.91597 -2.89271,0.91801 z m 113.83558,-0.86584 c -1.37388,-0.70124 -1.57015,-1.206 -2.0894,-5.37351 -0.33293,-2.67202 -0.39486,-8.60298 -0.39093,-37.43854 0.003,-18.84495 0.0748,-35.57323 0.16042,-37.17396 0.0856,-1.60073 0.049,-3.06563 -0.0815,-3.25534 -0.35467,-0.51566 -3.34139,-0.86551 -5.78704,-0.67786 -2.95918,0.22704 -5.58259,-0.26788 -5.97405,-1.12705 -0.33779,-0.74137 0.0676,-2.3875 0.79377,-3.22284 0.42118,-0.48452 0.95261,-0.54914 6.28094,-0.76372 3.20146,-0.12893 6.89239,-0.1974 8.20208,-0.15216 2.33824,0.0808 10.80329,0.31245 11.9724,0.32768 1.03913,0.0135 1.65364,0.90778 1.65364,2.40639 0,1.77732 -0.31821,2.28602 -1.65814,2.65073 -1.36425,0.37133 -7.27867,0.35223 -8.27539,-0.0267 -0.96572,-0.36716 -1.67119,-0.10257 -1.87327,0.70257 -0.0915,0.36458 -0.0761,6.57766 0.0343,13.80685 0.19964,13.0771 0.27686,22.28881 0.2355,28.09293 -0.0119,1.67349 -0.0228,4.94771 -0.024,7.27604 -0.001,2.32833 -0.0357,7.80521 -0.0765,12.17083 -0.0408,4.36563 0.0184,9.79514 0.13159,12.06557 0.26763,5.36896 -0.078,7.87066 -1.28402,9.2941 l -0.83603,0.98675 -1.11429,-0.56874 z m -57.87093,-0.50693 c -0.3804,-0.45208 -0.95062,-1.70224 -1.26715,-2.77813 -0.31653,-1.07589 -0.66923,-1.95616 -0.78377,-1.95616 -0.11454,0 -0.49166,0.44649 -0.83805,0.99219 -1.62538,2.56069 -4.00238,3.88426 -6.64,3.69732 -2.45516,-0.17401 -4.84909,-1.3569 -6.36195,-3.14356 -3.8055,-4.49423 -6.18966,-21.78845 -4.63573,-33.62668 0.14804,-1.12778 0.38205,-2.91372 0.52003,-3.96875 0.26414,-2.01977 2.36196,-8.77415 3.60843,-11.61818 1.25834,-2.87106 2.74575,-4.92399 4.34279,-5.9939 1.33152,-0.89203 1.61263,-0.9749 3.30729,-0.9749 3.45531,0 5.00211,1.25341 7.27472,5.8949 0.8905,1.81872 1.19754,2.2157 1.80813,2.33782 0.40452,0.0809 1.19479,0.5327 1.75616,1.004 1.20842,1.01453 1.19944,0.91356 0.77836,8.75495 -0.43225,8.04944 -0.16059,28.10234 0.44076,32.53515 0.15729,1.15944 0.45535,2.51343 0.66236,3.00887 0.60847,1.45626 0.48824,3.61007 -0.26325,4.71598 -0.65312,0.96116 -1.99117,1.94104 -2.65053,1.94104 -0.20183,0 -0.6782,-0.36988 -1.0586,-0.82196 z m -7.1937,-4.4114 c 0.78423,-1.52864 1.32273,-3.43994 2.02915,-7.20205 0.93388,-4.97344 1.10783,-6.5267 1.3186,-11.77396 0.1286,-3.20146 0.3576,-6.95193 0.50889,-8.33438 0.1513,-1.38245 0.38736,-4.7162 0.52458,-7.40833 0.13723,-2.69214 0.32626,-5.25679 0.42006,-5.69923 0.14374,-0.67794 -0.0153,-1.0524 -1.01153,-2.38125 -0.65015,-0.86725 -1.89595,-3.08278 -2.76845,-4.92341 -1.81159,-3.82173 -2.51036,-4.55775 -3.63036,-3.8239 -1.25864,0.82469 -2.15356,2.91234 -3.41407,7.96425 -1.47271,5.90231 -1.58781,7.1933 -1.59232,17.85937 -0.004,8.43565 0.066,10.27857 0.46462,12.30313 0.39319,1.99714 0.89403,4.91784 1.63989,9.56327 0.12621,0.78603 0.71954,1.71521 2.40025,3.75888 1.26035,1.53253 2.35688,1.56694 3.11069,0.0976 z m 133.35787,4.76446 c -0.57541,-0.47447 -1.56784,-2.73216 -1.85827,-4.22745 -0.0919,-0.47294 -0.2631,-0.8599 -0.38052,-0.8599 -0.11743,0 -0.47864,0.38696 -0.80267,0.8599 -1.12615,1.64364 -2.23322,2.63542 -3.64697,3.26717 -1.64046,0.73306 -3.77626,0.84068 -5.11749,0.25787 -0.47786,-0.20766 -1.04746,-0.45045 -1.26574,-0.53954 -2.51761,-1.02756 -4.14369,-3.12618 -5.37773,-6.94052 -3.37242,-10.42374 -3.73441,-27.35191 -0.79381,-37.12154 2.71839,-9.03138 4.58478,-12.34388 7.88289,-13.99055 1.05651,-0.52749 1.52218,-0.60603 2.8832,-0.4863 3.13396,0.27571 4.53244,1.50743 6.75788,5.95205 0.924,1.84543 1.21785,2.215 1.86378,2.34418 0.42174,0.0844 1.21086,0.5601 1.75357,1.05721 l 0.98677,0.90385 -0.20077,3.89572 c -0.35708,6.92875 -0.42743,20.64867 -0.14274,27.8405 0.29459,7.44146 0.61605,10.53359 1.21581,11.69468 0.20299,0.39295 0.36907,1.38596 0.36907,2.20668 0,1.19941 -0.14018,1.68724 -0.7144,2.48609 -0.69922,0.97274 -1.93286,1.87462 -2.54818,1.86292 -0.17012,-0.003 -0.55877,-0.2116 -0.86368,-0.46302 z m -7.21426,-5.3044 c 0.61897,-1.44335 1.61565,-5.41019 2.07275,-8.24961 0.17568,-1.09141 0.4369,-2.57969 0.58049,-3.3073 0.14357,-0.7276 0.36751,-4.00182 0.49763,-7.27604 0.13012,-3.27422 0.35957,-7.08422 0.50991,-8.46666 0.25775,-2.37034 0.84232,-11.83826 0.81452,-13.19212 -0.007,-0.34342 -0.56415,-1.35546 -1.23799,-2.24896 -0.67384,-0.8935 -1.34403,-1.96186 -1.48931,-2.37413 -0.71882,-2.03982 -2.60792,-5.47533 -3.23763,-5.88794 -0.66154,-0.43345 -0.7271,-0.43071 -1.40634,0.0587 -1.13451,0.81747 -2.3024,3.55694 -3.30128,7.7436 -1.33284,5.58649 -1.50075,6.89991 -1.74125,13.6206 -0.29176,8.15209 0.0169,13.90675 1.03071,19.21356 0.12509,0.65484 0.41788,2.44078 0.65061,3.96875 0.55517,3.64479 0.63669,3.86903 2.15064,5.91522 1.96289,2.65297 3.11753,2.78858 4.10654,0.48231 z M 5.9300295,233.76409 c -1.2337357,-0.27133 -1.3927796,-0.44074 -1.8129647,-1.9312 -0.6584315,-2.33555 -0.6382329,-13.86238 0.1060328,-60.50997 0.3570745,-22.38001 0.7898839,-29.32425 1.8897095,-30.31958 0.4836366,-0.43768 0.5367361,-0.43148 1.137403,0.13281 1.0716929,1.00681 2.2741093,4.26155 2.2793338,6.1698 0.00249,0.91282 0.2261459,2.67171 0.4969921,3.90864 0.270847,1.23692 0.690698,3.20145 0.933001,4.36562 0.242304,1.16417 0.552142,2.65245 0.688529,3.30729 0.345818,1.6604 1.546614,6.82117 1.846882,7.9375 0.136995,0.50933 0.44408,1.81901 0.682411,2.91042 0.238331,1.09141 0.732822,3.175 1.098869,4.63021 0.366047,1.45521 0.754207,3.12208 0.862576,3.70416 0.10837,0.58209 0.682979,3.20146 1.276908,5.82084 0.593929,2.61937 1.37947,6.25078 1.745647,8.06979 0.366176,1.81901 0.900277,4.20026 1.186891,5.29167 0.607178,2.31209 1.39622,6.0183 1.999684,9.3927 0.71789,4.01425 1.622764,8.05161 1.857084,8.28593 0.322145,0.32214 0.652091,-0.44259 0.949409,-2.20051 0.172285,-1.01865 0.402828,-2.32833 0.512318,-2.91042 0.109487,-0.58208 0.453096,-2.60614 0.763574,-4.49791 0.523454,-3.18946 0.677196,-4.05036 1.370256,-7.67292 0.139205,-0.7276 0.555979,-2.93026 0.926168,-4.89479 0.37019,-1.96453 0.860042,-4.46484 1.088562,-5.55625 0.686181,-3.27721 0.85643,-4.26732 1.114621,-6.48229 0.216752,-1.8595 0.501822,-3.2743 1.613427,-8.00744 0.145738,-0.62056 0.26498,-1.38601 0.26498,-1.70101 0,-0.315 0.115969,-0.93837 0.257709,-1.38527 0.14174,-0.44689 0.687332,-3.07472 1.21243,-5.83962 0.525097,-2.76489 1.186431,-6.17409 1.46963,-7.57599 0.2832,-1.4019 0.625973,-3.78315 0.761715,-5.29167 0.318431,-3.53869 1.289568,-6.89108 2.292434,-7.91352 1.336405,-1.3625 1.916819,-0.95477 3.406045,2.39264 l 0.765114,1.71979 0.197144,15.21355 c 0.108429,8.36744 0.261236,23.72651 0.339569,34.13125 0.07834,10.40474 0.173027,22.07286 0.210423,25.92916 0.0374,3.8563 -0.03185,7.48771 -0.153892,8.06979 -0.142354,0.67898 -0.498954,1.27973 -0.994839,1.67597 l -0.772951,0.61763 -1.158973,-0.56105 c -1.004411,-0.48623 -1.199057,-0.72025 -1.459566,-1.75481 -0.747794,-2.96977 -0.92356,-10.83424 -1.035796,-46.34596 C 38.120036,176.34008 38.004837,170 37.888529,170 c -0.451406,0 -2.072397,7.437 -2.710469,12.43542 -0.120745,0.94588 -0.465288,3.02948 -0.765648,4.63021 -0.300361,1.60073 -0.664837,3.56526 -0.809948,4.36562 -0.504621,2.78325 -1.84571,9.66887 -2.241637,11.50938 -0.219131,1.01864 -0.576517,2.86411 -0.794192,4.10104 -0.217676,1.23693 -0.573752,3.07043 -0.791284,4.07445 -0.217533,1.00401 -0.577652,2.96855 -0.800264,4.36562 -0.222615,1.39708 -0.518147,3.13545 -0.656744,3.86305 -0.138594,0.72761 -0.313568,1.68011 -0.388829,2.11667 -0.07526,0.43656 -0.377536,1.91315 -0.671719,3.28131 -0.294185,1.36815 -0.534879,2.77188 -0.534879,3.11939 0,0.74074 -0.839004,2.4806 -1.434546,2.97486 -1.051919,0.87302 -2.705734,-1.5453 -2.611916,-3.81931 0.03002,-0.7276 -0.244617,-2.6326 -0.610299,-4.23333 -0.841666,-3.68429 -1.064231,-4.68028 -1.448548,-6.48229 -0.170695,-0.80037 -0.408274,-1.75287 -0.527954,-2.11667 -0.11968,-0.3638 -0.403677,-1.67349 -0.631106,-2.91042 -0.78245,-4.25555 -0.906948,-4.90286 -1.475736,-7.67291 -0.313746,-1.52797 -0.847039,-3.84969 -1.185096,-5.15938 -0.693211,-2.6856 -1.283769,-5.24502 -2.014646,-8.73125 -0.274572,-1.30969 -0.680471,-3.15516 -0.901999,-4.10104 -0.221527,-0.94589 -0.502115,-2.25557 -0.623527,-2.91042 -0.185185,-0.9988 -1.113455,-5.18857 -2.139636,-9.65729 -0.133667,-0.58208 -0.378556,-1.71318 -0.544196,-2.51354 -0.43182,-2.08652 -0.528278,-2.38125 -0.7793311,-2.38125 -0.1232702,0 -0.2950115,6.16148 -0.3816477,13.69219 -0.2140191,18.60323 -0.3619013,26.99526 -0.6189361,35.12343 -0.123906,3.91826 -0.1166686,7.50552 0.016814,8.33438 0.2678826,1.66341 0.077555,5.47663 -0.3466378,6.94489 -0.3455263,1.19597 -1.3288399,1.78631 -2.5339439,1.52128 z m 118.2863005,-0.0865 c -3.11822,-1.02754 -4.25817,-2.71646 -5.28417,-7.82885 -1.1401,-5.68095 -1.4396,-8.65532 -1.4808,-14.70605 -0.0285,-4.18056 0.33427,-19.56916 0.69228,-29.36875 0.0985,-2.69604 0.0568,-4.37745 -0.11472,-4.63021 -0.20131,-0.2966 -1.02397,-0.43487 -3.25592,-0.54727 -3.54052,-0.1783 -4.70633,-0.62192 -4.70633,-1.79088 0,-0.40539 0.23245,-0.98658 0.51657,-1.29154 0.47814,-0.51322 0.77536,-0.55139 3.99488,-0.51291 2.85231,0.0341 3.51591,-0.0299 3.68719,-0.35531 0.11489,-0.21829 0.34321,-3.07579 0.50739,-6.35 0.96909,-19.32671 1.30034,-22.225 2.54013,-22.225 0.50342,0 1.3484,1.78223 1.71446,3.61612 0.14038,0.70327 0.46659,1.93351 0.72491,2.73388 0.41767,1.29407 0.46967,2.62366 0.46967,12.00768 v 10.5525 l 0.66146,0.25313 c 0.3638,0.13922 1.48502,0.19735 2.49159,0.12917 1.66707,-0.11292 1.88685,-0.0672 2.4668,0.5127 0.51471,0.51472 0.60287,0.79998 0.46023,1.48919 -0.27605,1.33388 -0.71958,1.51398 -3.72837,1.51398 h -2.70654 l -0.13811,0.7276 c -0.24822,1.30771 -0.54596,18.00125 -0.47071,26.39219 0.0972,10.84227 0.23297,14.85038 0.53667,15.84626 0.13796,0.45237 0.32531,1.71546 0.41633,2.80687 0.22302,2.67391 0.66314,4.93572 1.21281,6.23257 0.3772,0.88995 0.64422,1.12993 1.56386,1.40545 1.30326,0.39047 1.73649,0.16032 2.00573,-1.06553 0.233,-1.06086 1.60327,-1.71883 2.29086,-1.10001 1.11562,1.00405 0.77559,3.40385 -0.68255,4.81713 -0.85334,0.82709 -1.03499,0.8844 -3.11396,0.98241 -1.39511,0.0658 -2.59937,-0.025 -3.27164,-0.2465 z m 50.88989,-0.16138 c -1.65003,-0.52407 -3.44654,-2.5779 -4.00988,-4.58422 -0.43522,-1.55006 -1.05845,-7.37536 -1.49275,-13.95284 -0.15854,-2.40109 -0.40867,-5.74705 -0.55584,-7.43545 -0.32222,-3.69664 -0.30504,-18.65298 0.0323,-28.15101 0.46313,-13.03827 0.82084,-20.90904 1.0642,-23.41562 0.99344,-10.23244 1.21634,-11.1125 2.81463,-11.1125 0.44701,0 1.07044,0.39306 1.83318,1.15581 l 1.15581,1.15581 -0.005,2.48221 c -0.003,1.36521 -0.12786,3.6133 -0.27852,4.99575 -0.7432,6.81948 -1.35705,50.51365 -0.762,54.23958 0.1743,1.09141 0.3557,2.99641 0.4031,4.23334 0.15072,3.93271 0.61747,9.30202 1.05801,12.17083 0.23463,1.52797 0.48765,3.22461 0.56225,3.77031 0.1594,1.16594 0.5324,1.29596 0.75903,0.26458 0.48098,-2.18887 1.52114,-3.7527 2.49604,-3.7527 0.21828,0 0.69453,0.24782 1.05833,0.55072 0.57835,0.48153 0.65932,0.75469 0.64441,2.17401 -0.0217,2.05949 -0.70145,3.49431 -2.09962,4.43148 -1.16343,0.77983 -3.46851,1.16412 -4.67815,0.77991 z m 15.05444,-0.0824 c -0.63044,-0.47337 -1.19003,-2.26071 -1.49369,-4.77096 -0.524,-4.33164 -0.88482,-11.35587 -0.71302,-13.88046 0.0966,-1.41977 0.0633,-4.54593 -0.0741,-6.94702 -0.15479,-2.70562 -0.15787,-8.23896 -0.008,-14.55208 0.35992,-15.17178 0.6193,-17.21384 2.23811,-17.62013 0.80182,-0.20124 1.67696,0.32788 2.64806,1.60106 l 0.70565,0.92516 0.11037,22.42977 c 0.0931,18.92085 0.17627,22.82183 0.53162,24.93598 0.2938,1.74796 0.36583,3.1416 0.23806,4.60628 -0.15932,1.82649 -0.28109,2.19797 -0.93472,2.85159 -0.82828,0.82829 -2.42931,1.0357 -3.24824,0.42081 z M 61.224334,232.8406 c -1.310592,-0.4137 -2.877614,-1.38115 -3.910793,-2.41446 -2.827478,-2.82783 -4.505264,-13.88457 -4.471863,-29.46989 0.01699,-7.92526 0.27968,-10.16953 1.913022,-16.34352 2.165535,-8.18567 5.723766,-11.74633 10.861966,-10.86941 3.049706,0.52049 4.82533,1.87078 5.520092,4.1978 0.194916,0.65285 0.575992,1.72279 0.846833,2.37763 0.604647,1.46193 1.215499,5.29087 1.43515,8.99584 0.219097,3.69555 -0.294081,13.27222 -0.772572,14.41741 -0.365445,0.87463 -1.214104,1.3844 -1.751658,1.05217 -0.489871,-0.30276 -11.695049,-0.13277 -12.075761,0.18319 -0.419872,0.34847 -0.457142,3.04873 -0.08681,6.28972 0.142465,1.24678 0.380008,3.41334 0.527875,4.81457 0.361643,3.42698 1.096203,6.97453 2.133719,10.30478 1.067451,3.42634 1.456762,4.21316 2.084647,4.21316 0.845577,0 3.005423,-2.23508 4.387445,-4.54028 0.727604,-1.21363 1.776712,-2.6416 2.331352,-3.17328 0.976144,-0.93572 1.01531,-0.94843 1.223063,-0.39687 0.825664,2.19201 0.468358,3.77152 -1.553937,6.86937 -1.355918,2.07706 -2.492994,2.96651 -4.514019,3.53099 -1.484239,0.41455 -2.72831,0.40282 -4.127749,-0.0389 z m 7.050222,-31.90386 c 0.126503,-0.20468 0.17489,-1.44488 0.107532,-2.756 -0.661424,-12.87461 -0.751424,-13.58473 -2.247074,-17.7297 -1.030256,-2.8552 -1.635845,-3.62836 -2.755657,-3.51818 -0.630184,0.062 -0.929026,0.31546 -1.416015,1.20091 -0.718812,1.30695 -2.240661,7.39884 -2.660947,10.65165 -0.159819,1.23693 -0.414263,3.1929 -0.565433,4.34661 -0.151167,1.1537 -0.351105,3.34395 -0.444307,4.86721 -0.140827,2.30161 -0.101957,2.81893 0.230042,3.06173 0.636792,0.46569 9.456709,0.35334 9.751859,-0.12423 z M 243.52225,232.8406 c -1.3657,-0.43109 -2.90518,-1.39816 -3.98106,-2.50081 -2.76376,-2.83254 -4.42907,-13.9536 -4.40003,-29.38354 0.0111,-5.89458 0.10164,-7.51721 0.5684,-10.18646 1.86605,-10.67133 4.60089,-15.76179 9.1094,-16.95566 2.48647,-0.65843 6.18805,0.33748 7.54505,2.02998 0.33713,0.42049 0.97363,1.74813 1.41444,2.95031 1.73913,4.74302 2.29669,10.53997 1.82496,18.974 -0.33496,5.98867 -0.64416,7.06548 -2.00029,6.96616 -0.43656,-0.032 -3.34898,-0.0554 -6.47203,-0.0522 -3.96071,0.004 -5.79189,0.10026 -6.05385,0.31766 -0.29988,0.24888 -0.34437,0.87253 -0.22079,3.09487 0.20598,3.70422 0.8716,10.18185 1.19763,11.65506 0.1439,0.65025 0.3922,1.83713 0.55176,2.63749 0.38123,1.91224 1.96093,6.87422 2.42512,7.61751 0.20079,0.32151 0.5578,0.58458 0.79335,0.58458 0.80477,0 2.82643,-2.10988 4.31207,-4.50024 1.29158,-2.07813 2.86643,-3.93429 3.35872,-3.95868 0.20701,-0.0103 0.76948,1.88667 0.76948,2.59509 0,1.61456 -2.83302,6.23441 -4.41861,7.20549 -2.00085,1.22541 -4.28286,1.55356 -6.32372,0.90935 z m 6.98523,-31.71934 c 0.21304,-0.13166 0.26308,-1.07381 0.16747,-3.15295 -0.3308,-7.19343 -0.70004,-12.05201 -1.02867,-13.53547 -0.521,-2.35185 -1.99182,-6.27354 -2.60972,-6.95836 -0.81693,-0.9054 -1.87184,-0.78526 -2.53563,0.28878 -1.59346,2.57826 -3.35161,11.70432 -3.90219,20.25519 -0.14745,2.29009 -0.11026,2.79963 0.22213,3.0427 0.44441,0.32501 9.17039,0.37915 9.68661,0.0601 z m -61.6533,-35.50196 c -1.27662,-1.23998 -1.6337,-2.39206 -1.64889,-5.32001 -0.0115,-2.2107 0.044,-2.48504 0.62885,-3.10885 0.35279,-0.3763 0.8547,-0.68419 1.11536,-0.68419 0.26065,0 0.83932,-0.35718 1.28591,-0.79375 0.96246,-0.94082 0.94892,-0.93913 2.06645,-0.2578 1.03939,0.6337 1.60191,1.84956 1.98087,4.28155 0.23455,1.50528 0.20236,2.0276 -0.21203,3.43958 -0.5737,1.95483 -0.81272,2.32626 -1.49697,2.32626 -0.27902,0 -0.97408,0.23812 -1.54457,0.52916 -0.57049,0.29104 -1.07523,0.52917 -1.12165,0.52917 -0.0464,0 -0.52042,-0.4235 -1.05333,-0.94112 z\"\n  })));\n};\n\nexport default __webpack_public_path__ + \"static/media/title.8bf4427c.svg\";\nexport { SvgComponent as ReactComponent };","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport './styles/Main.scss';\nimport Controls from './Controls.js';\nimport Splash from './Splash.js';\nimport TeaList from './TeaList.js';\nimport { ReactComponent as Title } from './styles/images/title.svg';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      renderSplashPage: true,\n      teaData: [],\n      moodData: [],\n      userSelectedMood: '',\n      caffeineLevel: '',\n      moodId: 0\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://whateverly-datasets.herokuapp.com/api/v1/tea')\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          teaData: data.tea\n        });\n      })\n      .catch(error => console.log(error));\n\n    fetch('https://whateverly-datasets.herokuapp.com/api/v1/moods')\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          moodData: data.moods\n        });\n      })\n      .catch(error => console.log(error));\n  }\n\ngetMoodFromDescriptor = (descriptor) => {\n  if (descriptor === '') {\n    this.setState({\n      userSelectedMood: 'thirsty',\n      moodId: 0,\n      caffeineLevel: ''\n    });\n  } else {\n    let matchingMood = this.state.moodData.filter((mood) => {\n      return mood.descriptors.includes(descriptor);\n    });\n\n    this.setState({\n      userSelectedMood: descriptor,\n      moodId: matchingMood[0].moodId,\n      caffeineLevel: ''\n    });\n  }\n}\n\ntoggleSplash = () => {\n  this.setState({\n    renderSplashPage: !this.state.renderSplashPage\n  });\n}\n\nupdateCaffeineFilter = (caffeineLevel) => {\n  this.setState({\n    caffeineLevel\n  });\n}\n\ngetTeasFromMood() {\n  if (this.state.userSelectedMood === 'thirsty') {\n    let userSelectedTeas = this.state.teaData.map((tea) => {\n      return tea;\n    });\n\n    return this.filterTeasByCaffeine(userSelectedTeas);\n  } else {\n    let userSelectedTeas = this.state.teaData.filter((tea) => {\n      return this.state.moodId === tea.moodId;\n    });\n\n    return this.filterTeasByCaffeine(userSelectedTeas);\n  }\n}\n\nfilterTeasByCaffeine(userSelectedTeas) {\n  if (this.state.caffeineLevel !== '') {\n    userSelectedTeas = userSelectedTeas.filter((tea) => {\n      return tea.caffeine === this.state.caffeineLevel;\n    });\n  }\n  return userSelectedTeas;\n}\n\nrender() {\n  if (this.state.renderSplashPage) {\n    return (\n      <div className=\"App\"> \n        <header className=\"heading-container\">\n          <Title className=\"title\"/>\n          <h2 className=\"subtitle\">Find the perfect tea for your state of mind.</h2>\n        </header>\n        <section className=\"content-container\">\n          <Splash getMoodFromDescriptor={this.getMoodFromDescriptor}\n            moods={this.state.moodData}\n            toggleSplash={this.toggleSplash}/>\n        </section>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"App\">\n        <header className=\"heading-container\">\n          <Title className=\"title\" onClick={this.toggleSplash}/>\n          <h2 className=\"subtitle\">Find the perfect tea for your state of mind.</h2>\n        </header>\n        <section className=\"content-container\">\n          <div className=\"content-head-container\">\n            <img className=\"gutter-branch\" src={require(`./styles/images/gutter-branch.png`)} alt=\"\"/>\n            <Controls toggleSplash={this.toggleSplash}\n              getMoodFromDescriptor={this.getMoodFromDescriptor}\n              teas={this.state.teaData}\n              moods={this.state.moodData}\n              updateCaffeineFilter={this.updateCaffeineFilter}/>\n            <img className=\"gutter-branch branch-mirror\" src={require(`./styles/images/gutter-branch.png`)} alt=\"\"/>\n          </div>\n          <TeaList userSelectedTea={this.getTeasFromMood()}\n            userSelectedMood={this.state.userSelectedMood}\n            teas={this.state.teaData}/>\n        </section>\n      </div>\n    );\n  }\n}\n}\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}